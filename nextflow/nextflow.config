/* 
Nextflow RNAseq config file
*/

manifest {
	nextflowVersion = '>=0.29'
}

params {

	welcome = "Hello world"
	account = "" //SLURM account
	project = ""
	
	aligner = 'salmon'
	noFastQC = false
	noMultiQC = false
	noTrimmomatic = false
	noSortmeRNA = false
	
	libraryType='PE'
	
	salmonIndex=""
	
	
	
	/* General options */
	help=false
	outDir=""
	reads=""
	step1="1.raw.fastqc"
	step2="2.sortmerna"
	step3="3.trimmomatic"
	step4="4.salmon"
	fastqcSubDir="FastQC"
	multiqcSubDir="MultiQC"
	containerFolder="/mnt/picea/projects/singularity"
	

	
	
	/* ADVANCED OPTIONS */
	singleEndRead1 ="" //F is read1 comes from forward, R from reverse
	
	/* FastQC options */
	fastqcNoExtract=true

	/* sortmeRNA options */
	smeRNAfastx= true
	smeRNApairedIn = true
	smeRNAlog = true
	//smeRNADB="$SORTMERNADB"
	smeRNADB=""

  /* TRIMMOMATIC options */
	//trimJar="$TRIMMOMATIC_HOME/trimmomatic.jar"
	//trimAdapter = "$TRIMMOMATIC_HOME/adapters/TruSeq3-PE-2.fa"
	trimJar=""
	trimAdapter=""
	//trimJar="/mnt/picea/Modules/apps/bioinfo/trimmomatic/0.36/trimmomatic.jar"
	//trimAdapter = "/mnt/picea/Modules/apps/bioinfo/trimmomatic/0.36/adapters/TruSeq3-PE-2.fa"
	trimMode="PE"
	trimPthred=33
	trimLog = true
	trimSeedMismatches = 2
	trimPalClipThreshold = 30
	trimSimpleClipThreshold = 10
	trimWindowSize = 5
	trimRequiredQuality = 20
	trimMinLen = 50
	trimCrop = 0
	trimHeadCrop = 0
	
	/* SALMON options */
	salmonMode="IU" 

}

singularity {
	enabled = true
}
	
profiles {
	
	test {
		includeConfig 'conf/test.config'
	}
/*
	upsc {
		includeConfig 'conf/test.config'
	}
	
	uppmax {
		includeConfig 'conf/test.config'
	}
	*/
}

/* not working
executor {

  $local {
      cpus = 12
      memory = '14 GB'
  }

}
*/

process {
	//scratch = true 
	//next two lines are module loading related
	shell = ['/bin/bash', '-l']
	//beforeScript = 'source /mnt/picea/Modules/default/init/bash'
	//beforeScript = 'rm -rf work'
	//beforeScript = 'export NXF_WORK = \"${params.outDir}/work\"'
	beforeScript='ls -l'
	executor = 'slurm'
	clusterOptions = {"-A $params.account --mem"}
	//in case of: "slurmstepd: error: Exceeded step memory limit at some point"
	errorStrategy = 'finish'

	withName: multiqc {
			container = "${params.containerFolder}/multiqc.simg"
  }
	
	withLabel: fastqc {
			container = "${params.containerFolder}/fastqc.simg"
  }	
	
	withName: trimmomatic {
			container = "${params.containerFolder}/trimmomatic.simg"
  }	

	withLabel: smeRNAimg {
		container = "${params.containerFolder}/sortmerna.simg"
	}
		
	withName: salmon {
			container = "${params.containerFolder}/salmon.simg"
  }	
	
 
}


